// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
    @if $self {
      &,
      &:hover,
      &:active,
      &:focus {
        @content;
      }
    } @else {
      &:hover,
      &:active,
      &:focus {
        @content;
      }
    }
  }
  
  /// Make a context based selector a little more friendly
  /// @author Hugo Giraudel
  /// @param {String} $context
  @mixin when-inside($context) {
    #{$context} & {
      @content;
    }
  }

  @mixin focus-links{
    outline: 3px solid transparent;
    color: #0b0c0c;
    background-color: #fd0;
    -webkit-box-shadow: 0 -2px #fd0, 0 4px #0b0c0c;
    box-shadow: 0 -2px #fd0, 0 4px #0b0c0c;
    text-decoration: none;
}
  
@mixin bg-img($img-name, $img-ext){
    background-image: url('#{$img-path}/#{$img-name}.#{$img-ext}');
}
/// Media Queries

// Small devices
@mixin media-sm {
    @media screen and (min-width: (map-get($breakpoints, small))) {
        @content;
    }
  }
  
  // Medium devices
  @mixin media-md {
    @media screen and (min-width: (map-get($breakpoints, medium))) {
        @content;
    }
  }
  
  // Large devices
  @mixin media-lg {
    @media screen and (min-width: (map-get($breakpoints, large))) {
        @content;
    }
  }
  
  // Extra large devices
  @mixin media-xl {
    @media screen and (min-width: (map-get($breakpoints, x-large))) {
        @content;
    }
  }